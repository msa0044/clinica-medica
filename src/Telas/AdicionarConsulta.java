/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

import Calendario.Calendario;
import Modelo.*;
import Impressao.*;
import Dados.*;
import DAO.*;
import java.awt.Color;
import java.awt.Frame;
import javax.swing.JOptionPane;

/**
 *
 * @author msa04
 */
public class AdicionarConsulta extends javax.swing.JFrame {

    /**
     * Creates new form AdicionarConsulta
     */
    public static int remove = 0, edit = 0;

    public AdicionarConsulta() {
        remove = 0;
        edit = 0;
        Dados.pegarDados();
        initComponents();
        setResizable(false);
        this.setLocationRelativeTo(null);
        getContentPane().setBackground(Color.WHITE);

    }

    public String addZero(int i) {
        if (Integer.toString(i).length() == 1) {
            return "0" + i;
        } else {
            return Integer.toString(i);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        JCBMinuto = new javax.swing.JComboBox<>();
        jCheckBox2 = new javax.swing.JCheckBox();
        JCBMedico = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        JCBPaciente = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        JTNome = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        JCBHora = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Adicionar uma nova consulta");

        jPanel1.setBackground(new java.awt.Color(234, 234, 234));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel12.setText("Remover Consulta");

        jLabel13.setText("Selecionar consulta:        ");

        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel15.setText("Dados da Consulta:");

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(244, 244, 244));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel14.setText("Após uma consulta ser excluída não será possível recuperar os seus dados para eventuais operações.");

        jCheckBox1.setBackground(new java.awt.Color(234, 234, 234));
        jCheckBox1.setText("Aceitar condição");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jButton3.setText("Remover");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addGap(4, 4, 4)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(16, 16, 16))
        );

        int numMaxListaConsultasAgendadas = Dados.ListaDeConsultasAgendadas.size()-1;
        String itemNomeConsultasAgendadas = "";
        for(int o = 0; o <= numMaxListaConsultasAgendadas; o++){
            ConsultasAgendadas NomeConsultasAgendadasItem = Dados.ListaDeConsultasAgendadas.get(o);
            itemNomeConsultasAgendadas = NomeConsultasAgendadasItem.getNomeConsulta()+ " ("+ NomeConsultasAgendadasItem.getIdConsultaAgendada()+ ")";
            jComboBox1.addItem(itemNomeConsultasAgendadas);
        }
        jButton3.setEnabled(false);

        jPanel2.setBackground(new java.awt.Color(234, 234, 240));

        jLabel10.setText("Hora:");

        jLabel16.setText("Minuto:");

        jLabel3.setText("Paciente:");

        jButton1.setText("Cadastrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        JCBMinuto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        jCheckBox2.setBackground(new java.awt.Color(234, 234, 234));
        jCheckBox2.setText("Editar");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        JCBMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCBMedicoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Data e horário:     ");

        JCBPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCBPacienteActionPerformed(evt);
            }
        });

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        JTNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JTNomeKeyTyped(evt);
            }
        });

        jButton4.setText("Editar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Selecionar:");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Integrantes e nome da consulta:    ");

        JCBHora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        jLabel1.setText("Médico:");

        jLabel5.setText("Data:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Adicionar/Editar Consulta");

        jLabel4.setText("Nome:");

        jToolBar1.setBackground(new java.awt.Color(234, 234, 234));
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton2.setBackground(new java.awt.Color(234, 234, 234));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Midia/Inicio.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(JTNome)
                                    .addComponent(JCBPaciente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(JCBMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(59, 59, 59))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(JCBHora, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(267, 267, 267))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(JCBMinuto, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox2)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel7))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JTNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JCBMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel10)
                    .addComponent(JCBHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JCBPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel16)
                    .addComponent(JCBMinuto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        int numMaxListaMedicos = Dados.ListaDeMedicos.size()-1;
        String itemNomeMedicos = "";
        for(int o = 0; o <= numMaxListaMedicos; o++){
            Medico NomeMedicoItem = Dados.ListaDeMedicos.get(o);
            itemNomeMedicos = NomeMedicoItem.getNome() + " ("+ NomeMedicoItem.getIdMedico() + ")";
            JCBMedico.addItem(itemNomeMedicos);
        }
        int numMaxListaPacientes = Dados.ListaDePacientes.size()-1;
        String itemNomePacientes = "";
        for(int o = 0; o <= numMaxListaPacientes; o++){
            Paciente NomePacienteItem = Dados.ListaDePacientes.get(o);
            itemNomePacientes = NomePacienteItem.getNome()+ " ("+ NomePacienteItem.getIdPaciente()+ ")";
            JCBPaciente.addItem(itemNomePacientes);
        }
        jComboBox2.setEnabled(false);
        int numMaxListaConsultasAgendadass = Dados.ListaDeConsultasAgendadas.size()-1;
        String itemNomeConsultasAgendadass = "";
        for(int o = 0; o <= numMaxListaConsultasAgendadass; o++){
            ConsultasAgendadas NomeConsultasAgendadasItem = Dados.ListaDeConsultasAgendadas.get(o);
            itemNomeConsultasAgendadass = NomeConsultasAgendadasItem.getNomeConsulta()+ " ("+ NomeConsultasAgendadasItem.getIdConsultaAgendada()+ ")";
            jComboBox2.addItem(itemNomeConsultasAgendadass);
        }
        jButton4.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (jCheckBox1.isSelected()) {
            jButton3.setEnabled(true);

        } else {
            jButton3.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (jCheckBox1.isSelected()) {

            String cod = "";
            int i = 0;
            for (i = jComboBox1.getSelectedItem().toString().length() - 2; !((jComboBox1.getSelectedItem().toString().charAt(i) + "").equals("(")); i--) {
                cod = jComboBox1.getSelectedItem().toString().charAt(i) + cod;
            }
            ConsultasAgendadas m = new ConsultasAgendadas();
            for (int o = 0; o <= Dados.getListaDeConsultasAgendadas().size() - 1; o++) {
                if (Dados.getListaDeConsultasAgendadas().get(o).getIdConsultaAgendada() == Integer.parseInt(cod)) {
                    m = Dados.getListaDeConsultasAgendadas().get(o);
                }
            }

            DAOConsultasAgendadas.remover(m);
            AdicionarConsulta add = new AdicionarConsulta();
            add.setVisible(true);
            this.dispose();
            JOptionPane.showMessageDialog(null, "Consulta removida com sucesso!");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if (remove == 1) {
            String cod = "";
            int i = 0;
            for (i = jComboBox1.getSelectedItem().toString().length() - 2; !((jComboBox1.getSelectedItem().toString().charAt(i) + "").equals("(")); i--) {
                cod = jComboBox1.getSelectedItem().toString().charAt(i) + cod;
            }
            ConsultasAgendadas m = new ConsultasAgendadas();
            for (int o = 0; o <= Dados.getListaDeConsultasAgendadas().size() - 1; o++) {
                if (Dados.getListaDeConsultasAgendadas().get(o).getIdConsultaAgendada() == Integer.parseInt(cod)) {
                    m = Dados.getListaDeConsultasAgendadas().get(o);
                }
            }
            jTextArea1.setText(m.toString());
            remove = 0;
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked
        remove = 1;
    }//GEN-LAST:event_jComboBox1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (JCBMedico.getSelectedItem().toString().equals("")
                || JCBPaciente.getSelectedItem().toString().equals("")
                || jButton5.getText().equals("Selecionar:")
                || JCBHora.getSelectedItem().toString().equals("")
                || JCBMinuto.getSelectedItem().toString().equals("")) {
            JOptionPane.showMessageDialog(null, "ERRO. Algum dos dados não foram inseridos.");

        } else {
            String codPaciente = "";
            int ipaciente = 0;
            for (ipaciente = JCBPaciente.getSelectedItem().toString().length() - 2; !((JCBPaciente.getSelectedItem().toString().charAt(ipaciente) + "").equals("(")); ipaciente--) {
                codPaciente = JCBPaciente.getSelectedItem().toString().charAt(ipaciente) + codPaciente;
            }
            Paciente p = new Paciente();
            for (int o = 0; o <= Dados.getListaDePacientes().size() - 1; o++) {
                if (Dados.getListaDePacientes().get(o).getIdPaciente() == Integer.parseInt(codPaciente)) {
                    p = Dados.getListaDePacientes().get(o);
                }
            }
            String cod = "";
            int i = 0;
            for (i = JCBMedico.getSelectedItem().toString().length() - 2; !((JCBMedico.getSelectedItem().toString().charAt(i) + "").equals("(")); i--) {
                cod = JCBMedico.getSelectedItem().toString().charAt(i) + cod;
            }
            Medico m = new Medico();
            for (int o = 0; o <= Dados.getListaDeMedicos().size() - 1; o++) {
                if (Dados.getListaDeMedicos().get(o).getIdMedico() == Integer.parseInt(cod)) {
                    m = Dados.getListaDeMedicos().get(o);
                }
            }
            ConsultasAgendadas add = new ConsultasAgendadas(JTNome.getText(),
                    Integer.parseInt(jButton5.getText().charAt(0) + "" + jButton5.getText().charAt(1)),
                    Integer.parseInt(jButton5.getText().charAt(3) + "" + jButton5.getText().charAt(4)),
                    Integer.parseInt(jButton5.getText().charAt(6) + "" + jButton5.getText().charAt(7) + jButton5.getText().charAt(8) + jButton5.getText().charAt(9)),
                    Integer.parseInt(JCBHora.getSelectedItem().toString()),
                    Integer.parseInt(JCBMinuto.getSelectedItem().toString()), m, p);
            DAOConsultasAgendadas.salvar(add);
            AdicionarConsulta aa = new AdicionarConsulta();
            aa.setVisible(true);
            this.dispose();

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        TelaRecepcao p = new TelaRecepcao();
        p.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        if (jCheckBox2.isSelected()) {
            edit = 1;
            jComboBox2.setEnabled(true);
            jButton1.setEnabled(false);
            jButton4.setEnabled(true);
        } else {
            jComboBox2.setEnabled(false);
            jButton1.setEnabled(true);
            jButton4.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void JCBMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCBMedicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JCBMedicoActionPerformed

    private void JCBPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCBPacienteActionPerformed

    }//GEN-LAST:event_JCBPacienteActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        if (edit == 1) {
            String cod = "";
            int i = 0;
            for (i = jComboBox2.getSelectedItem().toString().length() - 2; !((jComboBox2.getSelectedItem().toString().charAt(i) + "").equals("(")); i--) {
                cod = jComboBox2.getSelectedItem().toString().charAt(i) + cod;
            }
            ConsultasAgendadas cc = new ConsultasAgendadas();
            for (int o = 0; o <= Dados.getListaDeConsultasAgendadas().size() - 1; o++) {
                if (Dados.getListaDeConsultasAgendadas().get(o).getIdConsultaAgendada() == Integer.parseInt(cod)) {
                    cc = Dados.getListaDeConsultasAgendadas().get(o);
                }
            }

            JTNome.setText(cc.getNomeConsulta());
            JCBHora.setSelectedIndex(cc.getHoraConsulta());
            JCBMinuto.setSelectedIndex(cc.getMinutosConsulta());
            jButton5.setText(addZero(cc.getDiaConsulta()) + "/" + addZero(cc.getMesConsulta()) + "/" + addZero(cc.getAnoConsulta()));
            JCBMedico.setSelectedIndex(cc.getMedicoResponsavel().getIdMedico() - 1);
            JCBPaciente.setSelectedIndex(cc.getPacienteAcompanhado().getIdPaciente() - 1);
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void JTNomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTNomeKeyTyped
        if (JTNome.getText().length() >= 45) {
            evt.consume();
        } else {
            String maiusculas = "ABCDEFGHIJKLMNO PQRSTUVWXYZÁÀÂÃÉÈÊÓÒÔÕÍÌÎÚÙÛ ";
            String minusculas = maiusculas.toLowerCase() + ",.:;()-";
            if (!minusculas.contains(evt.getKeyChar() + "") & !maiusculas.contains(evt.getKeyChar() + "")) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_JTNomeKeyTyped

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (JCBMedico.getSelectedItem().toString().equals("")
                || JCBPaciente.getSelectedItem().toString().equals("")
                || jButton5.getText().equals("Selecionar:")
                || JCBHora.getSelectedItem().toString().equals("")
                || JCBMinuto.getSelectedItem().toString().equals("")) {
            JOptionPane.showMessageDialog(null, "ERRO. Algum dos dados não foram inseridos.");

        } else {
            String cod = "";
            int i = 0;
            for (i = jComboBox2.getSelectedItem().toString().length() - 2; !((jComboBox2.getSelectedItem().toString().charAt(i) + "").equals("(")); i--) {
                cod = jComboBox2.getSelectedItem().toString().charAt(i) + cod;
            }
            //          ^ O laço acima pega o id

            ConsultasAgendadas cc = new ConsultasAgendadas();

            for (int o = 0; o <= Dados.getListaDeConsultasAgendadas().size() - 1; o++) {
                if (Dados.getListaDeConsultasAgendadas().get(o).getIdConsultaAgendada() == Integer.parseInt(cod)) {
                    ConsultasAgendadas BB = new ConsultasAgendadas(JTNome.getText(),
                            Integer.parseInt(jButton5.getText().charAt(0) + "" + jButton5.getText().charAt(1)),
                            Integer.parseInt(jButton5.getText().charAt(3) + "" + jButton5.getText().charAt(4)),
                            Integer.parseInt(jButton5.getText().charAt(6) + "" + jButton5.getText().charAt(7) + jButton5.getText().charAt(8) + jButton5.getText().charAt(9)),
                            Integer.parseInt(JCBHora.getSelectedItem().toString()),
                            Integer.parseInt(JCBMinuto.getSelectedItem().toString()), null, null);
                    cc = BB;
                }
            }
            //          ^ O laço acima pega a consulta para editar

            String codMedic = "";
            int ii = 0;
            for (ii = JCBMedico.getSelectedItem().toString().length() - 2; !((JCBMedico.getSelectedItem().toString().charAt(ii) + "").equals("(")); ii--) {
                codMedic = JCBMedico.getSelectedItem().toString().charAt(ii) + codMedic;
            }
            //          ^ o laço acima pega o id do medico responsavel pela consulta

            Medico mm = new Medico();
            for (int o = 0; o <= Dados.getListaDeMedicos().size() - 1; o++) {
                if (Dados.getListaDeMedicos().get(o).getIdMedico() == Integer.parseInt(codMedic)) {
                    mm = Dados.getListaDeMedicos().get(o);
                }
            }
            //          ^ O laço acima pega de vez o médico relacionado à consulta

            String codPacient = "";
            int iii = 0;
            for (iii = JCBPaciente.getSelectedItem().toString().length() - 2; !((JCBPaciente.getSelectedItem().toString().charAt(iii) + "").equals("(")); iii--) {
                codPacient = JCBPaciente.getSelectedItem().toString().charAt(iii) + codPacient;
            }
            //          ^ o laço acima pega o id do paciente acompanhado na consulta

            Paciente pp = new Paciente();
            for (int o = 0; o <= Dados.getListaDePacientes().size() - 1; o++) {
                if (Dados.getListaDePacientes().get(o).getIdPaciente() == Integer.parseInt(codPacient)) {
                    pp = Dados.getListaDePacientes().get(o);
                }
            }
            //          ^ O laço acima pega de vez o paciente acompanhado na consulta
            cc.setMedicoResponsavel(mm);
            cc.setPacienteAcompanhado(pp);
            cc.setIdConsultaAgendada(Integer.parseInt(cod));
            DAOConsultasAgendadas.editar(cc);

            AdicionarConsulta add = new AdicionarConsulta();
            add.setVisible(true);
            this.dispose();

        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        Calendario calendario = new Calendario(new Frame());
        calendario.setVisible(true);
        String s = calendario.toString();
        if (s.equals("")) {

        } else {
            jButton5.setText(s);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdicionarConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdicionarConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdicionarConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdicionarConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdicionarConsulta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JCBHora;
    private javax.swing.JComboBox<String> JCBMedico;
    private javax.swing.JComboBox<String> JCBMinuto;
    private javax.swing.JComboBox<String> JCBPaciente;
    private javax.swing.JTextField JTNome;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
