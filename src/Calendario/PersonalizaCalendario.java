package Calendario;import Calendario.FeriadosAno;import java.awt.Color;import java.awt.Component;import java.util.Calendar;import javax.swing.JTable;import javax.swing.table.DefaultTableCellRenderer;/** * Renderizador o calendario. *  * @version 1.0 * @author Fellipe Adorno Claudino da Costa * @see DefaultTableCellRenderer */@SuppressWarnings("serial")public class PersonalizaCalendario extends DefaultTableCellRenderer {	        /**         * Guarda cor de fundo sem ser selecionado.         * @since 1.0         */	private Color fundoPadrao = Color.WHITE;         /**         * Guarda cor de texto sem ser selecionado.         * @since 1.0         */	private Color foregroundPadrao = Color.BLACK;         /**         * Guarda cor de texto de um feriado.         * @since 1.0         */	private Color foregroundSpecial = new Color(255, 137, 0);         /**         * Guarda cor de fundo ao ser selecionado (Clicado com um clique).         * @since 1.0         */	private Color backgroundSelected = new Color(220, 220, 220);         /**         * Guarda o dia para renderizar celula por celula da tabela.         * @since 1.0         */	private Calendar calendar;         /**         * Guarda os feriados de um ano para poder verificar se é feriado.         * @since 1.0         */	private FeriadosAno feriados;         /**         * Guarda em qual linha o ponteiro do renderizador está.         * @since 1.0         */	private int linhaMouseUp = -1;        /**         * Guarda em qual coluna o ponteiro do renderizador está.         * @since 1.0         */	private int colunaMouseUp = -1;			/**         * Renderizador da tabela de dias.         *          * @since 1.0         * @param calendar Calendar a ser passado pelo Calendario         * @param feriados FeriadosAno a ser passado pelo Calendario         */	public PersonalizaCalendario(Calendar calendar, FeriadosAno feriados){		this.calendar = calendar;		this.feriados = feriados;	}        	@Override	public Component getTableCellRendererComponent(final JTable table, final Object value, 			final boolean isSelected, final boolean hasFocus, final int row, final int column) {			Component c =super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);		            setHorizontalAlignment(CENTER);            setBackground(fundoPadrao);            setForeground(foregroundPadrao);            int b = (!getText().equals("")) ? Integer.parseInt(getText()) : 0;                        if(column == 0){                setForeground(foregroundSpecial);            }            if(column == colunaMouseUp && row == linhaMouseUp) {            	setBackground(foregroundSpecial);            	setForeground(Color.white);            }            if(feriados.hasFeriado(calendar.get(Calendar.MONTH), b)) {                setForeground(Color.red);				setToolTipText(feriados.getFeriado(calendar.get(Calendar.MONTH), b));            } else {            	setToolTipText(null);            }            if(calendar.get(Calendar.DAY_OF_MONTH) == b)            	setBackground(backgroundSelected);            return c;	}	        /**         * Muda a cor da coluna selecionada na tabela.         *          * @since 1.0         * @param linhaMouseUp Numero da linha para mudar de cor         * @param colunaMouseUp Numero da coluna para mudar de cor         */	public void mudarCorSelecionado(int linhaMouseUp, int colunaMouseUp) {            this.linhaMouseUp = linhaMouseUp;            this.colunaMouseUp = colunaMouseUp;	}}